/* SIE CONFIDENTIAL
PlayStation(R)4 Programmer Tool Runtime Library Release 05.008.001
* Copyright (C) 2013 Sony Interactive Entertainment Inc.
* All Rights Reserved.
*/

#include "std_cbuffer.h"
#include "vsoutput.hs"
#include "../toolkit/shader_common/illum.hs"

#if 1
struct PS_INPUT
{
    float4 Position     : S_POSITION;
    float2 TextureUV    : TEXCOORD0;
	//float3 vNorm		: TEXCOORD1;
    //float4 vTang		: TEXCOORD3;
	float3 vPosInView	: TEXCOORD5;
};
#elif 0
struct PS_INPUT
{
    float4 Position     : S_POSITION;
    float2 TextureUV    : TEXCOORD0;
	float3 vNorm		: TEXCOORD1;
    float4 vTang		: TEXCOORD3;
	float3 vPosInView	: TEXCOORD5;
};
#elif 0
struct PS_INPUT
{
    float4 Position     : S_POSITION;
    float2 TextureUV    : TEXCOORD0;
	float3 vNorm		: TEXCOORD1;
    //float4 vTang		: TEXCOORD3;
	//float3 vPosInView	: TEXCOORD5;
};
#elif 0
struct PS_INPUT
{
    float2 TextureUV    : TEXCOORD0;
    float4 Position     : S_POSITION;
};
#endif

SamplerState samp0 : register(s0);

Texture2D colorMap : register( t0 );

float4 main( PS_INPUT In ) : S_TARGET_OUTPUT
{
	float3 diff_col = colorMap.Sample(samp0, In.TextureUV.xy).xyz;
#if 1
	return float4(diff_col, 1) * float4(In.vPosInView, 1) + In.Position.x*0.00001;
#elif 0
	return float4(diff_col, 1) * float4(In.vPosInView, 1) + In.vNorm.x*0.0001 + In.vTang.x*0.0001;
#elif 0
	return float4(diff_col, 1) * float4(In.vNorm, 1);
#elif 0
	return float4(diff_col, 1);
#endif
}

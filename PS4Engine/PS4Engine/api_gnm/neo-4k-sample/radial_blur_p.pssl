/* SIE CONFIDENTIAL
PlayStation(R)4 Programmer Tool Runtime Library Release 05.008.001
* Copyright (C) 2016 Sony Interactive Entertainment Inc.
* All Rights Reserved.
*/

Texture2D<float3> tex		: register(t0);
SamplerState sampler		: register(s0);

ConstantBuffer cb
{
	uint		g_debugView;
	float2		g_sunPos;
};

struct VS_OUTPUT
{
    float4 position		: S_POSITION;
	float2 uv			: TEXCOORD0;
};

float4 main(VS_OUTPUT input) : S_TARGET_OUTPUT
{
	const uint kNumSamples = 40;

	float2 sunuv = (g_sunPos + float2(1, -1)) * float2(0.5, -0.5);
	float2 duv = input.uv - sunuv;
	float2 uv_step = duv / kNumSamples;

	float2 uv = input.uv;
	float3 c = 0;
	for(int i=0; i<kNumSamples; ++i)
	{
		c += tex.Sample(sampler, uv);
		uv -= uv_step;
	}

	c /= kNumSamples;

	float2 clipw = saturate((abs(g_sunPos) - 1.5) / (1-1.5));
	float w0 = min(clipw.x, clipw.y);
	float w1 = 1 - length(duv);

	c = c*w0*w1;

	return float4(c, 1);
}
